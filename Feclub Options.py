# -*- coding: utf-8 -*-
"""FEClub_Options.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XYU6slxzJhKum-fgX8t17x4h4R31DJZQ
"""

import numpy as np
from scipy.stats import norm
import pandas as pd
from google.colab import files

def Black_Scholes_call(S0, K, T, r, sigma, q):
  d1 = (np.log(S0/K) + (r - q + 0.5*sigma**2)*T)/(sigma*np.sqrt(T))
  d2 = (np.log(S0/K) + (r - q - 0.5*sigma**2)*T)/(sigma*np.sqrt(T))

  call_price = S0*np.exp(-q*T)*norm.cdf(d1) - K*np.exp(-r*T)*norm.cdf(d2)

  return call_price

def Black_Scholes_put(S0, K, T, r, sigma, q):
  d1 = (np.log(S0/K) + (r - q + 0.5*sigma**2)*T)/(sigma*np.sqrt(T))
  d2 = (np.log(S0/K) + (r - q - 0.5*sigma**2)*T)/(sigma*np.sqrt(T))

  put_price = K*np.exp(-r*T)*norm.cdf(-d2) - S0*np.exp(-q*T)*norm.cdf(-d1)

  return put_price

S = 100 #stock price
K = 105 #strike price
T = 0.5 #time to maturity
r = 0.05 #risk-free rate
sigma = 0.1 #implied volatility
q = 0.02 #continuous dividend yield

call_price = Black_Scholes_call(S, K, T, r, sigma, q)
put_price = Black_Scholes_put(S, K, T, r, sigma, q)

print("Call price: ", call_price)
print("Put price: ", put_price)

def BS_call_synthetic_data(S0, N):

  S = np.full(N, S0) #Stock Price S
  K = np.random.uniform(90, 110, N) #Strike price range
  q = np.random.uniform(0.02, 0.06, N) #dividend yield range (annual)
  r = np.random.uniform(0.01, 0.06, N) #risk free rate range (annual)
  sigma = np.random.uniform(0.15, 0.3, N) #implied volatility range
  T = np.random.uniform(0.25, 2, N) #time to maturity range[years]

  d1 = (np.log(S/K) + (r - q + 0.5*sigma**2)*T) / (sigma*np.sqrt(T))
  d2 = d1 - sigma*np.sqrt(T)

  call_price = S*np.exp(-q*T)*norm.cdf(d1) - K*np.exp(-r*T)*norm.cdf(d2) #calculate call price

  df = pd.DataFrame({
      'Stock Price (S)': S,
      'Strike Price (K)': K,
      'Dividend Yield (q)': q,
      'Risk-Free Rate (r)': r,
      'Implied Volatility (v)': v,
      'Time to Expiry (T)': T,
      'Call Option Price': call_price
  })

  return df

S0 = 100
N = 1000

df = BS_call_synthetic_data(S0, N)
df.to_csv("BSM_call_sample.csv", index=False)
from google.colab import files
files.download("BSM_call_sample.csv")

